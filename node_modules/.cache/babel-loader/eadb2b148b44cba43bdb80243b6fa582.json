{"ast":null,"code":"import { GET_POSTS, DELETE_POST, FAILED_REQUEST } from \"../actions/postActions\";\nlet initialState = {\n  posts: [],\n  error: null,\n  fetched: false\n};\n\nfunction reducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_POSTS:\n      return { ...state,\n        posts: action.payload,\n        fetched: true\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: [...state.posts.filter(post => post.id !== parseInt(action.id))]\n      };\n\n    case FAILED_REQUEST:\n      return { ...state,\n        fetched: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/Users/ghost/Desktop/atominvest-code-challenge/src/store/reducer.js"],"names":["GET_POSTS","DELETE_POST","FAILED_REQUEST","initialState","posts","error","fetched","reducer","state","action","type","payload","filter","post","id","parseInt"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,WAAnB,EAAgCC,cAAhC,QAAqD,wBAArD;AAEA,IAAIC,YAAY,GAAG;AAClBC,EAAAA,KAAK,EAAE,EADW;AAElBC,EAAAA,KAAK,EAAE,IAFW;AAGlBC,EAAAA,OAAO,EAAE;AAHS,CAAnB;;AAMA,SAASC,OAAT,CAAkBC,KAAK,GAAGL,YAA1B,EAAwCM,MAAxC,EAAgD;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKV,SAAL;AACC,aAAO,EACN,GAAGQ,KADG;AAENJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAFR;AAGNL,QAAAA,OAAO,EAAE;AAHH,OAAP;;AAMD,SAAKL,WAAL;AACC,aAAO,EACN,GAAGO,KADG;AAENJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYC,QAAQ,CAACN,MAAM,CAACK,EAAR,CAAjD,CAAJ;AAFD,OAAP;;AAKD,SAAKZ,cAAL;AACC,aAAO,EACN,GAAGM,KADG;AAENF,QAAAA,OAAO,EAAE,KAFH;AAGND,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAHR,OAAP;;AAMD;AACC,aAAOH,KAAP;AAtBF;AAyBA;;AAED,eAAeD,OAAf","sourcesContent":["import {GET_POSTS, DELETE_POST, FAILED_REQUEST} from \"../actions/postActions\"\n\nlet initialState = {\n\tposts: [],\n\terror: null,\n\tfetched: false\n}\n\nfunction reducer (state = initialState, action) {\n\tswitch(action.type){\n\t\tcase GET_POSTS:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: action.payload,\n\t\t\t\tfetched: true\n\t\t\t}\n\n\t\tcase DELETE_POST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [...state.posts.filter((post) => post.id !== parseInt(action.id))]\n\t\t\t}\n\n\t\tcase FAILED_REQUEST:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfetched: false,\n\t\t\t\terror: action.payload\n\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\n\t}\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}