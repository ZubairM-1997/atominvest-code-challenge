{"ast":null,"code":"var _jsxFileName = \"/Users/ghost/Desktop/atominvest-code-challenge/src/Components/Statistics.js\";\nimport React from \"react\";\nimport PopularWords from \"./PopularWords\";\nimport propTypes from \"prop-types\";\nconst style = {};\n\nclass Statistics extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      total: 0,\n      topFive: []\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this.getWords();\n    }\n  }\n\n  getWords() {\n    let countArray = [];\n    let occurances = {};\n    this.props.postList.forEach(post => {\n      let postTitle = post.title.split(\" \");\n      postTitle.forEach(word => {\n        if (!occurances[word]) {\n          occurances[word] = 1;\n        } else {\n          occurances[word]++;\n        }\n      });\n      let postBody = post.body.split(\" \");\n      postBody.forEach(word => {\n        if (!occurances[word]) {\n          occurances[word] = 1;\n        } else {\n          occurances[word]++;\n        }\n      });\n      let totalPostLength = postTitle.length + postBody.length;\n      countArray.push(totalPostLength);\n    });\n    console.log(occurances);\n    this.analyse(countArray, occurances);\n  }\n\n  analyse(array, obj) {\n    let sum = array.reduce((a, b) => a + b, 0);\n    let tops = [];\n    tops = Object.keys(obj).sort(function (a, b) {\n      return obj[a] - obj[b];\n    });\n    let reverse = tops.slice(-5).reverse();\n    this.setState({ ...this.state,\n      total: sum,\n      topFive: reverse\n    }, () => {\n      console.log(this.state);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Top 5 words\"), React.createElement(\"ol\", {\n      className: \"list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, this.state.topFive.map(word => React.createElement(PopularWords, {\n      word: word,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Total number of words: \", this.state.total));\n  }\n\n}\n\nStatistics.propTypes = {\n  postList: propTypes.array\n};\nexport default Statistics;","map":{"version":3,"sources":["/Users/ghost/Desktop/atominvest-code-challenge/src/Components/Statistics.js"],"names":["React","PopularWords","propTypes","style","Statistics","Component","state","total","topFive","componentDidUpdate","prevProps","prevState","props","getWords","countArray","occurances","postList","forEach","post","postTitle","title","split","word","postBody","body","totalPostLength","length","push","console","log","analyse","array","obj","sum","reduce","a","b","tops","Object","keys","sort","reverse","slice","setState","render","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,MAAMC,KAAK,GAAG,EAAd;;AAGA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAwC;AAAA;AAAA;AAAA,SAEvCC,KAFuC,GAE/B;AACPC,MAAAA,KAAK,EAAE,CADA;AAEPC,MAAAA,OAAO,EAAE;AAFF,KAF+B;AAAA;;AAQvCC,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACvC,QAAGD,SAAS,KAAK,KAAKE,KAAtB,EAA4B;AAC3B,WAAKC,QAAL;AACA;AACD;;AAEDA,EAAAA,QAAQ,GAAE;AACT,QAAIC,UAAU,GAAG,EAAjB;AACA,QAAIC,UAAU,GAAG,EAAjB;AACA,SAAKH,KAAL,CAAWI,QAAX,CAAoBC,OAApB,CAA6BC,IAAD,IAAU;AAErC,UAAIC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAWC,KAAX,CAAiB,GAAjB,CAAhB;AACAF,MAAAA,SAAS,CAACF,OAAV,CAAmBK,IAAD,IAAU;AAC3B,YAAG,CAACP,UAAU,CAACO,IAAD,CAAd,EAAqB;AACpBP,UAAAA,UAAU,CAACO,IAAD,CAAV,GAAmB,CAAnB;AACA,SAFD,MAEK;AACJP,UAAAA,UAAU,CAACO,IAAD,CAAV;AACA;AACD,OAND;AAQA,UAAIC,QAAQ,GAAGL,IAAI,CAACM,IAAL,CAAUH,KAAV,CAAgB,GAAhB,CAAf;AACAE,MAAAA,QAAQ,CAACN,OAAT,CAAkBK,IAAD,IAAU;AAC1B,YAAG,CAACP,UAAU,CAACO,IAAD,CAAd,EAAqB;AACpBP,UAAAA,UAAU,CAACO,IAAD,CAAV,GAAmB,CAAnB;AACA,SAFD,MAEK;AACJP,UAAAA,UAAU,CAACO,IAAD,CAAV;AACA;AACD,OAND;AAQA,UAAIG,eAAe,GAAGN,SAAS,CAACO,MAAV,GAAmBH,QAAQ,CAACG,MAAlD;AACAZ,MAAAA,UAAU,CAACa,IAAX,CAAgBF,eAAhB;AACD,KAtBA;AAuBAG,IAAAA,OAAO,CAACC,GAAR,CAAYd,UAAZ;AACA,SAAKe,OAAL,CAAahB,UAAb,EAAyBC,UAAzB;AACC;;AAGFe,EAAAA,OAAO,CAACC,KAAD,EAAQC,GAAR,EAAY;AAClB,QAAIC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA3B,EAA8B,CAA9B,CAAV;AACA,QAAIC,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,GAAGC,MAAM,CAACC,IAAP,CAAYP,GAAZ,EAAiBQ,IAAjB,CAAsB,UAASL,CAAT,EAAYC,CAAZ,EAAe;AAAC,aAAOJ,GAAG,CAACG,CAAD,CAAH,GAASH,GAAG,CAACI,CAAD,CAAnB;AAAuB,KAA7D,CAAP;AACA,QAAIK,OAAO,GAAGJ,IAAI,CAACK,KAAL,CAAW,CAAE,CAAb,EAAiBD,OAAjB,EAAd;AAGA,SAAKE,QAAL,CAAc,EACb,GAAG,KAAKrC,KADK;AAEbC,MAAAA,KAAK,EAAE0B,GAFM;AAGbzB,MAAAA,OAAO,EAAEiC;AAHI,KAAd,EAIG,MAAM;AACRb,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAjB;AACA,KAND;AASE;;AAEHsC,EAAAA,MAAM,GAAE;AACP,WACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADD,EAEC;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,KAAKtC,KAAL,CAAWE,OAAX,CAAmBqC,GAAnB,CAAwBvB,IAAD,IAAU,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAEA,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAjC,CAFF,CAFD,EAQC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAA4B,KAAKhB,KAAL,CAAWC,KAAvC,CARD,CADD;AAaA;;AA7EsC;;AAgFxCH,UAAU,CAACF,SAAX,GAAuB;AACtBc,EAAAA,QAAQ,EAAEd,SAAS,CAAC6B;AADE,CAAvB;AAIA,eAAe3B,UAAf","sourcesContent":["import React from \"react\"\nimport PopularWords from \"./PopularWords\"\nimport propTypes from \"prop-types\"\n\n\nconst style = {\n\n}\nclass Statistics extends React.Component{\n\n\tstate = {\n\t\ttotal: 0,\n\t\ttopFive: []\n\t}\n\n\n\tcomponentDidUpdate(prevProps, prevState){\n\t\tif(prevProps !== this.props){\n\t\t\tthis.getWords()\n\t\t}\n\t}\n\n\tgetWords(){\n\t\tlet countArray = []\n\t\tlet occurances = {}\n\t\tthis.props.postList.forEach((post) => {\n\n\t\t\tlet postTitle = post.title.split(\" \")\n\t\t\tpostTitle.forEach((word) => {\n\t\t\t\tif(!occurances[word]){\n\t\t\t\t\toccurances[word] = 1\n\t\t\t\t}else{\n\t\t\t\t\toccurances[word]++\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tlet postBody = post.body.split(\" \")\n\t\t\tpostBody.forEach((word) => {\n\t\t\t\tif(!occurances[word]){\n\t\t\t\t\toccurances[word] = 1\n\t\t\t\t}else{\n\t\t\t\t\toccurances[word]++\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tlet totalPostLength = postTitle.length + postBody.length\n\t\t\tcountArray.push(totalPostLength)\n\t})\n\t\tconsole.log(occurances)\n\t\tthis.analyse(countArray, occurances)\n  }\n\n\n\tanalyse(array, obj){\n\t\tlet sum = array.reduce((a, b) => a + b, 0)\n\t\tlet tops = []\n\t\ttops = Object.keys(obj).sort(function(a, b) {return obj[a] - obj[b]})\n\t\tlet reverse = tops.slice(-(5)).reverse();\n\n\n\t\tthis.setState({\n\t\t\t...this.state,\n\t\t\ttotal: sum,\n\t\t\ttopFive: reverse\n\t\t}, () => {\n\t\t\tconsole.log(this.state)\n\t\t}\n\t\t)\n\n\t  }\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"stats\">\n\t\t\t\t<h2>Top 5 words</h2>\n\t\t\t\t<ol className=\"list\">\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.state.topFive.map((word) => <PopularWords word={word}/>)\n\t\t\t\t\t}\n\t\t\t\t</ol>\n\n\t\t\t\t<h2>Total number of words: {this.state.total}</h2>\n\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nStatistics.propTypes = {\n\tpostList: propTypes.array\n}\n\nexport default Statistics"]},"metadata":{},"sourceType":"module"}